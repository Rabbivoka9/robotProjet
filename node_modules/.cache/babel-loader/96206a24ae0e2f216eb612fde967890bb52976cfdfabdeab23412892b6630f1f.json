{"ast":null,"code":"var _jsxFileName = \"/home/rabbi/projetMois/projetmois/src/composant/Robos.jsx\",\n  _s = $RefreshSig$();\n// import image from '../images/robot.jpg'\nimport { useState, useEffect } from 'react';\nimport Card from './Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Robos() {\n  _s();\n  const [data, setDate] = useState(null);\n  useEffect(() => {\n    fetch('https://jsonplaceholder.typicode.com/users').then(response => response.json()).then(data => setDate(data)).catch(error => console.log(error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contenair\",\n    children: data.map(user => {\n      return /*#__PURE__*/_jsxDEV(Card, {\n        robo: user\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n}\n_s(Robos, \"8/1EHM90KPb59QEyr4vBGkocQ+k=\");\n_c = Robos;\nexport default Robos;\nvar _c;\n$RefreshReg$(_c, \"Robos\");","map":{"version":3,"names":["useState","useEffect","Card","jsxDEV","_jsxDEV","Robos","_s","data","setDate","fetch","then","response","json","catch","error","console","log","className","children","map","user","robo","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/rabbi/projetMois/projetmois/src/composant/Robos.jsx"],"sourcesContent":["// import image from '../images/robot.jpg'\nimport { useState, useEffect } from 'react';\nimport Card from './Card';\n\n\nfunction Robos (){\n\n    const [data, setDate] = useState(null);  \n\n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response => response.json())\n            .then((data) => setDate(data))\n            .catch(error => console.log(error));    \n    }, []); \n\n\n    return (\n        <div className='contenair'>\n            {\n                data.map((user)=>{\n                    return(\n                        < Card robo={user} />\n                    )\n                })\n            }\n        </div>\n    )\n  \n}\nexport default Robos;"],"mappings":";;AAAA;AACA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG1B,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAEb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZQ,KAAK,CAAC,4CAA4C,CAAC,CAC9CC,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,EAAE,CAAC,CACjCF,IAAI,CAAEH,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAC,CAAC,CAC7BM,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAGN,oBACIV,OAAA;IAAKa,SAAS,EAAC,WAAW;IAAAC,QAAA,EAElBX,IAAI,CAACY,GAAG,CAAEC,IAAI,IAAG;MACb,oBACIhB,OAAA,CAAEF,IAAI;QAACmB,IAAI,EAAED;MAAK;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAG;IAE7B,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAEJ;AAGd;AAACnB,EAAA,CAxBQD,KAAK;AAAAqB,EAAA,GAALrB,KAAK;AAyBd,eAAeA,KAAK;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}